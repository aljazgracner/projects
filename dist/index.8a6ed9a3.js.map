{"mappings":"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","sources":["view/navView.js","helpers.js","view/View.js","view/ticTacToeView.js","modules/ticTacModule.js","controller.js"],"sourcesContent":["class NavigationView {\r\n  _navigation = document.querySelector(\".menu\");\r\n  _allOptions = document.querySelectorAll(\".nav-option\");\r\n\r\n  addHoverEventHandlers(fn) {\r\n    [\"mouseover\", \"mouseout\"].forEach((condition) => {\r\n      this._navigation.addEventListener(condition, function (e) {\r\n        fn(e);\r\n      });\r\n    });\r\n  }\r\n\r\n  hoverFunction(e) {\r\n    if (e.target.closest(\"div\").classList.contains(\"menu-option\")) {\r\n      const navLink = e.target.closest(\"div\");\r\n      navLink.classList.toggle(\"mousehover\");\r\n      navLink.querySelector(\"i\").classList.toggle(\"bx-tada\");\r\n    }\r\n  }\r\n\r\n  addClickHandler(fn) {\r\n    this._navigation.addEventListener(\"click\", function (click) {\r\n      fn(click.target);\r\n    });\r\n  }\r\n\r\n  checkClickedContent(clickEvent) {\r\n    if (clickEvent.closest(\"menu-option\") == \"undefined\") return;\r\n    return clickEvent.closest(\".menu-option\").querySelector(\"span\").textContent;\r\n  }\r\n}\r\n\r\nexport default new NavigationView();\r\n","export const timeout = async function (seconds) {\r\n  await new Promise((resolve) => setTimeout(resolve, seconds * 1000));\r\n};\r\n","export default class View {\r\n  _contentContainer = document.querySelector(\".content-container\");\r\n\r\n  renderContent(clickedOption) {\r\n    this._clearContentView();\r\n    this._renderHTML();\r\n  }\r\n\r\n  _clearContentView() {\r\n    this._contentContainer.innerHTML = \"\";\r\n  }\r\n}\r\n","import View from \"./View.js\";\r\nimport { timeout } from \"../helpers.js\";\r\n\r\nclass TicTacToeView extends View {\r\n  _renderHTML() {\r\n    const markup = `<div class=\"tic-tac-toe\">\r\n    <div class=\"tic-tac-box\" id=\"1\"></div>\r\n    <div class=\"tic-tac-box\" id=\"2\"></div>\r\n    <div class=\"tic-tac-box\" id=\"3\"></div>\r\n    <div class=\"tic-tac-box\" id=\"4\"></div>\r\n    <div class=\"tic-tac-box\" id=\"5\"></div>\r\n    <div class=\"tic-tac-box\" id=\"6\"></div>\r\n    <div class=\"tic-tac-box\" id=\"7\"></div>\r\n    <div class=\"tic-tac-box\" id=\"8\"></div>\r\n    <div class=\"tic-tac-box\" id=\"9\"></div>\r\n</div>\r\n<div class=\"tic-tac-player\">\r\n            <div class=\"tic-tac-player-box\">\r\n                <span class=\"player-1 player active-player\">Player 1</span>\r\n                <span class=\"player-2 player\">Player 2</span>\r\n                <span class=\"turn\">Active turn</span>\r\n            </div>\r\n            <div class=\"tic-tac-player-box win-msg\"></div>\r\n            <div class=\"tic-tac-player-box play\"></div>\r\n           </div>\r\n        `;\r\n    this._contentContainer.insertAdjacentHTML(\"afterbegin\", markup);\r\n  }\r\n\r\n  addClickEventHandler(fn) {\r\n    const ticTacContainer = document.querySelector(\".tic-tac-toe\");\r\n    ticTacContainer.addEventListener(\"click\", fn, true);\r\n  }\r\n\r\n  removeClickEventHandler(fn) {\r\n    const ticTacContainer = document.querySelector(\".tic-tac-toe\");\r\n    ticTacContainer.removeEventListener(\"click\", fn, true);\r\n  }\r\n\r\n  addHoverHandler(fn) {\r\n    [\"mouseover\", \"mouseout\"].forEach((e) =>\r\n      document.querySelector(\".tic-tac-toe\").addEventListener(e, function (e) {\r\n        fn(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  hoverFunction(hover) {\r\n    if (hover.target.closest(\"div\").classList.contains(\"tic-tac-toe\")) return;\r\n    hover.target.closest(\"div\").classList.toggle(\"mousehover\");\r\n  }\r\n\r\n  checkIfBoxEmpty(clickedBox) {\r\n    if (clickedBox.target.closest(\"div\").classList.contains(\"tic-tac-toe\"))\r\n      return false;\r\n    if (!clickedBox.target.closest(\"div\").textContent == \"\") return false;\r\n    return true;\r\n  }\r\n\r\n  removeMarks(replayArray) {\r\n    [...replayArray].forEach((e) => {\r\n      document.getElementById(e).innerHTML = \"\";\r\n    });\r\n  }\r\n\r\n  createMark(clickedBox, activePlayer, replayArray, boxNumbers) {\r\n    if (!replayArray) {\r\n      clickedBox.target\r\n        .closest(\"div\")\r\n        .insertAdjacentHTML(\"afterbegin\", activePlayer);\r\n    }\r\n    if (replayArray) {\r\n      (async () => {\r\n        this.highlightTicTacBoxOnOff(boxNumbers);\r\n        let crossCircle = \"X\";\r\n        for (const x of replayArray) {\r\n          await timeout(0.5);\r\n          const box = document.getElementById(x);\r\n          if (box.innerHTML == \"\")\r\n            box.insertAdjacentHTML(\"afterbegin\", crossCircle);\r\n          crossCircle == \"X\" ? (crossCircle = \"O\") : (crossCircle = \"X\");\r\n        }\r\n        this.highlightTicTacBoxOnOff(boxNumbers);\r\n      })();\r\n    }\r\n  }\r\n\r\n  highlightActivePlayer(player) {\r\n    const player1 = document.querySelector(\".player-1\");\r\n    const player2 = document.querySelector(\".player-2\");\r\n    if (player == \"X\") {\r\n      player1.classList.add(\"active-player\");\r\n      player2.classList.remove(\"active-player\");\r\n    } else {\r\n      player1.classList.remove(\"active-player\");\r\n      player2.classList.add(\"active-player\");\r\n    }\r\n  }\r\n\r\n  highlightTicTacBoxOnOff(boxNumbers) {\r\n    [...boxNumbers].forEach((number) => {\r\n      document.getElementById(number).classList.toggle(\"win-color\");\r\n    });\r\n  }\r\n\r\n  renderWinner(player, boxNumbers) {\r\n    const markup = `<span class=\"win-message\">${player} wins!</span>\r\n    <a href=#>\r\n                        <div class=\"watch-replay\">\r\n                            Watch replay here\r\n                        </div>\r\n                    </a>`;\r\n    document.querySelector(\".win-msg\").insertAdjacentHTML(\"afterbegin\", markup);\r\n\r\n    const playAgainmarkup = ` <a href=#>\r\n    <div class=\"play-again\">\r\n        Play again?\r\n    </div>\r\n</a>`;\r\n    document\r\n      .querySelector(\".play\")\r\n      .insertAdjacentHTML(\"afterbegin\", playAgainmarkup);\r\n\r\n    this.highlightTicTacBoxOnOff(boxNumbers);\r\n  }\r\n\r\n  addReplayButtonHoverEvent(fn) {\r\n    const button = document.querySelector(\".watch-replay\");\r\n    [\"mouseout\", \"mouseover\"].forEach((e) => {\r\n      button.addEventListener(e, fn);\r\n    });\r\n  }\r\n\r\n  removeReplayButtonHoverEvent(fn) {\r\n    const button = document.querySelector(\".watch-replay\");\r\n    [\"mouseout\", \"mouseover\"].forEach((e) => {\r\n      button.removeEventListener(e, fn);\r\n    });\r\n  }\r\n\r\n  replayButtonHoverFunction(event) {\r\n    event.target.closest(\".watch-replay\").classList.toggle(\"replay-hover\");\r\n  }\r\n\r\n  addReplayButtonClickEvent(fn) {\r\n    const button = document.querySelector(\".watch-replay\");\r\n    button.addEventListener(\"click\", fn);\r\n  }\r\n\r\n  addPlayAgainHoverEvent(fn) {\r\n    const button = document.querySelector(\".play-again\");\r\n    [\"mouseout\", \"mouseover\"].forEach((e) => {\r\n      button.addEventListener(e, fn);\r\n    });\r\n  }\r\n\r\n  removePlayAgainHoverEvent(fn) {\r\n    const button = document.querySelector(\".play-again\");\r\n    [\"mouseout\", \"mouseover\"].forEach((e) => {\r\n      button.removeEventListener(e, fn);\r\n    });\r\n  }\r\n\r\n  playAgainHoverFunction(event) {\r\n    event.target.closest(\".play-again\").classList.toggle(\"replay-hover\");\r\n  }\r\n\r\n  addPlayAgainClickEvent(fn) {\r\n    const button = document.querySelector(\".play-again\");\r\n    button.addEventListener(\"click\", fn);\r\n  }\r\n\r\n  removeButtons() {\r\n    const replayButton = document.querySelector(\".win-msg\");\r\n    const playAgainButton = document.querySelector(\".play\");\r\n    [replayButton, playAgainButton].forEach((e) => {\r\n      e.innerHTML = \"\";\r\n    });\r\n  }\r\n}\r\n\r\nexport default new TicTacToeView();\r\n","class Module {\r\n  activePlayer = \"X\";\r\n  winner;\r\n  winningNumbers = \"\";\r\n  boardState = [[], [], []];\r\n  resetGameState() {\r\n    this.winner = \"\";\r\n    this.boardState = [[], [], []];\r\n    this.activePlayer = \"X\";\r\n    this.winningNumbers = \"\";\r\n  }\r\n  checkForWinner() {\r\n    const winningCombos = [\r\n      [1, 2, 3],\r\n      [4, 5, 6],\r\n      [7, 8, 9],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [3, 6, 9],\r\n      [1, 5, 9],\r\n      [3, 5, 7],\r\n    ];\r\n    winningCombos.forEach((winningNumbers) => {\r\n      if (\r\n        winningNumbers.every((number) => this.boardState[0].includes(number))\r\n      ) {\r\n        this.winningNumbers = new Set([\r\n          ...this.winningNumbers,\r\n          ...winningNumbers,\r\n        ]);\r\n        this.winner = \"Player 1\";\r\n      }\r\n      if (\r\n        winningNumbers.every((number) => this.boardState[1].includes(number))\r\n      ) {\r\n        this.winningNumbers = new Set([\r\n          ...this.winningNumbers,\r\n          ...winningNumbers,\r\n        ]);\r\n        this.winner = \"Player 2\";\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  changeActivePlayer() {\r\n    this.activePlayer == \"X\"\r\n      ? (this.activePlayer = \"O\")\r\n      : (this.activePlayer = \"X\");\r\n  }\r\n  updateBoardState(clickedBox) {\r\n    const boxNumber = clickedBox.target.closest(\"div\").getAttribute(\"id\");\r\n    this.activePlayer == \"X\"\r\n      ? this.boardState[0].push(Number(boxNumber))\r\n      : this.boardState[1].push(Number(boxNumber));\r\n    this.boardState[2].push(Number(boxNumber));\r\n  }\r\n}\r\n\r\nconst ticTacModule = new Module();\r\n\r\nexport default ticTacModule;\r\n","import navigationView from \"./view/navView.js\";\r\nimport ticTacToeView from \"./view/ticTacToeView.js\";\r\nimport ticTacModule from \"./modules/ticTacModule.js\";\r\n\r\nclass Controller {\r\n  playTicTac = this.playTicTacToe.bind(this);\r\n  replayTicTac = this.replayTicTacToe.bind(this);\r\n  playAgainTicTac = this.playAgainTicTacToe.bind(this);\r\n\r\n  constructor() {\r\n    navigationView.addHoverEventHandlers(navigationView.hoverFunction);\r\n    navigationView.addClickHandler(this.showContent.bind(this));\r\n  }\r\n\r\n  showContent() {\r\n    ticTacToeView.renderContent(navigationView.clickedContent);\r\n    ticTacToeView.addClickEventHandler(this.playTicTac);\r\n    ticTacToeView.addHoverHandler(ticTacToeView.hoverFunction);\r\n  }\r\n\r\n  playTicTacToe(clickedBox) {\r\n    if (ticTacToeView.checkIfBoxEmpty(clickedBox)) {\r\n      ticTacToeView.createMark(clickedBox, ticTacModule.activePlayer);\r\n      ticTacModule.updateBoardState(clickedBox);\r\n      ticTacModule.changeActivePlayer();\r\n      ticTacModule.checkForWinner();\r\n\r\n      if (ticTacModule.winner) {\r\n        console.log(ticTacModule.winningNumbers);\r\n        ticTacToeView.renderWinner(\r\n          ticTacModule.winner,\r\n          ticTacModule.winningNumbers\r\n        );\r\n        ticTacToeView.removeClickEventHandler(this.playTicTac);\r\n        ticTacToeView.addReplayButtonHoverEvent(\r\n          ticTacToeView.replayButtonHoverFunction\r\n        );\r\n        ticTacToeView.addReplayButtonClickEvent(this.replayTicTacToe);\r\n        ticTacToeView.addPlayAgainHoverEvent(\r\n          ticTacToeView.playAgainHoverFunction\r\n        );\r\n        ticTacToeView.addPlayAgainClickEvent(this.playAgainTicTac);\r\n      }\r\n      if (!ticTacModule.winner)\r\n        ticTacToeView.highlightActivePlayer(ticTacModule.activePlayer);\r\n    }\r\n  }\r\n\r\n  replayTicTacToe() {\r\n    ticTacToeView.removeMarks(ticTacModule.boardState[2]);\r\n    ticTacToeView.createMark(\r\n      null,\r\n      null,\r\n      ticTacModule.boardState[2],\r\n      ticTacModule.winningNumbers\r\n    );\r\n  }\r\n\r\n  playAgainTicTacToe() {\r\n    ticTacToeView.removeMarks(ticTacModule.boardState[2]);\r\n    ticTacToeView.highlightTicTacBoxOnOff(ticTacModule.winningNumbers);\r\n    ticTacModule.resetGameState();\r\n    ticTacToeView.highlightActivePlayer(ticTacModule.activePlayer);\r\n    ticTacToeView.addClickEventHandler(this.playTicTac);\r\n    ticTacToeView.removeButtons();\r\n  }\r\n}\r\n\r\nconst initialize = new Controller();\r\n"],"names":["$f1b359f81b885a25$export$2e2bcd8739ae039","_navigation","document","querySelector","_allOptions","querySelectorAll","addHoverEventHandlers","fn","forEach","condition","this","addEventListener","e","hoverFunction","target","closest","classList","contains","navLink","toggle","addClickHandler","fn1","click","checkClickedContent","clickEvent","textContent","$8be2bceadb607702$export$83e74882c5df8fe1","async","seconds","Promise","resolve","setTimeout","_contentContainer","renderContent","clickedOption","_clearContentView","_renderHTML","innerHTML","insertAdjacentHTML","addClickEventHandler","removeEventListener","fn2","e1","hover","clickedBox","removeMarks","replayArray","getElementById","clickedBox1","activePlayer","replayArray1","boxNumbers","highlightTicTacBoxOnOff","crossCircle","x","box","player","player1","player2","add","remove","boxNumbers1","number","boxNumbers2","markup","fn3","button","fn4","event","addReplayButtonClickEvent","fn5","fn6","$d94e7856029136bf$export$2e2bcd8739ae039","winner","winningNumbers","boardState","resetGameState","checkForWinner","every","includes","Set","changeActivePlayer","updateBoardState","boxNumber","getAttribute","push","Number","playTicTac","playTicTacToe","bind","replayTicTac","replayTicTacToe","playAgainTicTac","playAgainTicTacToe","showContent","$ef0e71b5063f58e1$export$2e2bcd8739ae039","clickedContent","addHoverHandler","checkIfBoxEmpty","createMark","console","log","renderWinner","removeClickEventHandler","addReplayButtonHoverEvent","replayButtonHoverFunction","addPlayAgainHoverEvent","playAgainHoverFunction","addPlayAgainClickEvent","highlightActivePlayer","removeButtons"],"version":3,"file":"index.8a6ed9a3.js.map"}