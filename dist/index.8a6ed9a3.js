var e=new class{_navigation=document.querySelector(".menu");_allOptions=document.querySelectorAll(".nav-option");addHoverEventHandlers(e){["mouseover","mouseout"].forEach((t=>{this._navigation.addEventListener(t,(function(t){e(t)}))}))}hoverFunction(e){if(e.target.closest("div").classList.contains("menu-option")){const t=e.target.closest("div");t.classList.toggle("mousehover"),t.querySelector("i").classList.toggle("bx-tada")}}addClickHandler(e){this._navigation.addEventListener("click",(function(t){e(t.target)}))}checkClickedContent(e){if("undefined"!=e.closest("menu-option"))return e.closest(".menu-option").querySelector("span").textContent}};const t=async function(e){await new Promise((t=>setTimeout(t,1e3*e)))};var n=new class extends class{_contentContainer=document.querySelector(".content-container");renderContent(e){this._clearContentView(),this._renderHTML()}_clearContentView(){this._contentContainer.innerHTML=""}}{_renderHTML(){this._contentContainer.insertAdjacentHTML("afterbegin",'<div class="tic-tac-toe">\n    <div class="tic-tac-box" id="1"></div>\n    <div class="tic-tac-box" id="2"></div>\n    <div class="tic-tac-box" id="3"></div>\n    <div class="tic-tac-box" id="4"></div>\n    <div class="tic-tac-box" id="5"></div>\n    <div class="tic-tac-box" id="6"></div>\n    <div class="tic-tac-box" id="7"></div>\n    <div class="tic-tac-box" id="8"></div>\n    <div class="tic-tac-box" id="9"></div>\n</div>\n<div class="tic-tac-player">\n            <div class="tic-tac-player-box">\n                <span class="player-1 player active-player">Player 1</span>\n                <span class="player-2 player">Player 2</span>\n                <span class="turn">Active turn</span>\n            </div>\n            <div class="tic-tac-player-box win-msg"></div>\n            <div class="tic-tac-player-box play"></div>\n           </div>\n        ')}addClickEventHandler(e){document.querySelector(".tic-tac-toe").addEventListener("click",e,!0)}removeClickEventHandler(e){document.querySelector(".tic-tac-toe").removeEventListener("click",e,!0)}addHoverHandler(e){["mouseover","mouseout"].forEach((t=>document.querySelector(".tic-tac-toe").addEventListener(t,(function(t){e(t)}))))}hoverFunction(e){e.target.closest("div").classList.contains("tic-tac-toe")||e.target.closest("div").classList.toggle("mousehover")}checkIfBoxEmpty(e){return!e.target.closest("div").classList.contains("tic-tac-toe")&&""!=!e.target.closest("div").textContent}removeMarks(e){[...e].forEach((e=>{document.getElementById(e).innerHTML=""}))}createMark(e,n,a,i){a||e.target.closest("div").insertAdjacentHTML("afterbegin",n),a&&(async()=>{this.highlightTicTacBoxOnOff(i);let e="X";for(const n of a){await t(.5);const a=document.getElementById(n);""==a.innerHTML&&a.insertAdjacentHTML("afterbegin",e),e="X"==e?"O":"X"}this.highlightTicTacBoxOnOff(i)})()}highlightActivePlayer(e){const t=document.querySelector(".player-1"),n=document.querySelector(".player-2");"X"==e?(t.classList.add("active-player"),n.classList.remove("active-player")):(t.classList.remove("active-player"),n.classList.add("active-player"))}highlightTicTacBoxOnOff(e){[...e].forEach((e=>{document.getElementById(e).classList.toggle("win-color")}))}renderWinner(e,t){const n=`<span class="win-message">${e} wins!</span>\n    <a href=#>\n                        <div class="watch-replay">\n                            Watch replay here\n                        </div>\n                    </a>`;document.querySelector(".win-msg").insertAdjacentHTML("afterbegin",n);document.querySelector(".play").insertAdjacentHTML("afterbegin",' <a href=#>\n    <div class="play-again">\n        Play again?\n    </div>\n</a>'),this.highlightTicTacBoxOnOff(t)}addReplayButtonHoverEvent(e){const t=document.querySelector(".watch-replay");["mouseout","mouseover"].forEach((n=>{t.addEventListener(n,e)}))}removeReplayButtonHoverEvent(e){const t=document.querySelector(".watch-replay");["mouseout","mouseover"].forEach((n=>{t.removeEventListener(n,e)}))}replayButtonHoverFunction(e){e.target.closest(".watch-replay").classList.toggle("replay-hover")}addReplayButtonClickEvent(e){document.querySelector(".watch-replay").addEventListener("click",e)}addPlayAgainHoverEvent(e){const t=document.querySelector(".play-again");["mouseout","mouseover"].forEach((n=>{t.addEventListener(n,e)}))}removePlayAgainHoverEvent(e){const t=document.querySelector(".play-again");["mouseout","mouseover"].forEach((n=>{t.removeEventListener(n,e)}))}playAgainHoverFunction(e){e.target.closest(".play-again").classList.toggle("replay-hover")}addPlayAgainClickEvent(e){document.querySelector(".play-again").addEventListener("click",e)}removeButtons(){[document.querySelector(".win-msg"),document.querySelector(".play")].forEach((e=>{e.innerHTML=""}))}};var a=new class{activePlayer="X";winner;winningNumbers="";boardState=[[],[],[]];resetGameState(){this.winner="",this.boardState=[[],[],[]],this.activePlayer="X",this.winningNumbers=""}checkForWinner(){[[1,2,3],[4,5,6],[7,8,9],[1,4,7],[2,5,8],[3,6,9],[1,5,9],[3,5,7]].forEach((e=>{if(e.every((e=>this.boardState[0].includes(e)))&&(this.winningNumbers=new Set([...this.winningNumbers,...e]),this.winner="Player 1"),e.every((e=>this.boardState[1].includes(e))))return this.winningNumbers=new Set([...this.winningNumbers,...e]),void(this.winner="Player 2")}))}changeActivePlayer(){"X"==this.activePlayer?this.activePlayer="O":this.activePlayer="X"}updateBoardState(e){const t=e.target.closest("div").getAttribute("id");"X"==this.activePlayer?this.boardState[0].push(Number(t)):this.boardState[1].push(Number(t)),this.boardState[2].push(Number(t))}};new class{playTicTac=this.playTicTacToe.bind(this);replayTicTac=this.replayTicTacToe.bind(this);playAgainTicTac=this.playAgainTicTacToe.bind(this);constructor(){e.addHoverEventHandlers(e.hoverFunction),e.addClickHandler(this.showContent.bind(this))}showContent(){n.renderContent(e.clickedContent),n.addClickEventHandler(this.playTicTac),n.addHoverHandler(n.hoverFunction)}playTicTacToe(e){n.checkIfBoxEmpty(e)&&(n.createMark(e,a.activePlayer),a.updateBoardState(e),a.changeActivePlayer(),a.checkForWinner(),a.winner&&(console.log(a.winningNumbers),n.renderWinner(a.winner,a.winningNumbers),n.removeClickEventHandler(this.playTicTac),n.addReplayButtonHoverEvent(n.replayButtonHoverFunction),n.addReplayButtonClickEvent(this.replayTicTacToe),n.addPlayAgainHoverEvent(n.playAgainHoverFunction),n.addPlayAgainClickEvent(this.playAgainTicTac)),a.winner||n.highlightActivePlayer(a.activePlayer))}replayTicTacToe(){n.removeMarks(a.boardState[2]),n.createMark(null,null,a.boardState[2],a.winningNumbers)}playAgainTicTacToe(){n.removeMarks(a.boardState[2]),n.highlightTicTacBoxOnOff(a.winningNumbers),a.resetGameState(),n.highlightActivePlayer(a.activePlayer),n.addClickEventHandler(this.playTicTac),n.removeButtons()}};
//# sourceMappingURL=index.8a6ed9a3.js.map
